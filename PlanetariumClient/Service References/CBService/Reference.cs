//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlanetariumClient.CBService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateCBSysWorkFlowStates", Namespace="www.mkoit.de/Kepler")]
    public enum CreateCBSysWorkFlowStates : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectCentralBody = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectSatellite = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreateCBSys = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fin = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CBody", Namespace="www.mkoit.de/Kepler")]
    [System.SerializableAttribute()]
    public partial class CBody : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MassInKgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MassInKg {
            get {
                return this.MassInKgField;
            }
            set {
                if ((this.MassInKgField.Equals(value) != true)) {
                    this.MassInKgField = value;
                    this.RaisePropertyChanged("MassInKg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CBSys", Namespace="www.mkoit.de/Kepler")]
    [System.SerializableAttribute()]
    public partial class CBSys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlanetariumClient.CBService.CBody CentralBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PlanetariumClient.CBService.CBody[] SatellitesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetariumClient.CBService.CBody CentralBody {
            get {
                return this.CentralBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.CentralBodyField, value) != true)) {
                    this.CentralBodyField = value;
                    this.RaisePropertyChanged("CentralBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PlanetariumClient.CBService.CBody[] Satellites {
            get {
                return this.SatellitesField;
            }
            set {
                if ((object.ReferenceEquals(this.SatellitesField, value) != true)) {
                    this.SatellitesField = value;
                    this.RaisePropertyChanged("Satellites");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CBService.ICreateCBSys")]
    public interface ICreateCBSys {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Begin", ReplyAction="http://tempuri.org/ICreateCBSys/BeginResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates Begin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Begin", ReplyAction="http://tempuri.org/ICreateCBSys/BeginResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> BeginAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Cancel", ReplyAction="http://tempuri.org/ICreateCBSys/CancelResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates Cancel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Cancel", ReplyAction="http://tempuri.org/ICreateCBSys/CancelResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> CancelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Reset", ReplyAction="http://tempuri.org/ICreateCBSys/ResetResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/Reset", ReplyAction="http://tempuri.org/ICreateCBSys/ResetResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> ResetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetCentralBody", ReplyAction="http://tempuri.org/ICreateCBSys/SetCentralBodyResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetCentralBody(PlanetariumClient.CBService.CBody CentralBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetCentralBody", ReplyAction="http://tempuri.org/ICreateCBSys/SetCentralBodyResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetCentralBodyAsync(PlanetariumClient.CBService.CBody CentralBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetSatellite", ReplyAction="http://tempuri.org/ICreateCBSys/SetSatelliteResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetSatellite(PlanetariumClient.CBService.CBody Satellite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetSatellite", ReplyAction="http://tempuri.org/ICreateCBSys/SetSatelliteResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetSatelliteAsync(PlanetariumClient.CBService.CBody Satellite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetLastSatelliteEnd", ReplyAction="http://tempuri.org/ICreateCBSys/SetLastSatelliteEndResponse")]
        PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetLastSatelliteEnd(PlanetariumClient.CBService.CBody Satellite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/SetLastSatelliteEnd", ReplyAction="http://tempuri.org/ICreateCBSys/SetLastSatelliteEndResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetLastSatelliteEndAsync(PlanetariumClient.CBService.CBody Satellite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/CreateCBSys", ReplyAction="http://tempuri.org/ICreateCBSys/CreateCBSysResponse")]
        PlanetariumClient.CBService.CreateCBSysResponse CreateCBSys(PlanetariumClient.CBService.CreateCBSysRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICreateCBSys/CreateCBSys", ReplyAction="http://tempuri.org/ICreateCBSys/CreateCBSysResponse")]
        System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysResponse> CreateCBSysAsync(PlanetariumClient.CBService.CreateCBSysRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCBSys", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCBSysRequest {
        
        public CreateCBSysRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCBSysResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateCBSysResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates CreateCBSysResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public PlanetariumClient.CBService.CBSys NewCBSys;
        
        public CreateCBSysResponse() {
        }
        
        public CreateCBSysResponse(PlanetariumClient.CBService.CreateCBSysWorkFlowStates CreateCBSysResult, PlanetariumClient.CBService.CBSys NewCBSys) {
            this.CreateCBSysResult = CreateCBSysResult;
            this.NewCBSys = NewCBSys;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICreateCBSysChannel : PlanetariumClient.CBService.ICreateCBSys, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCBSysClient : System.ServiceModel.ClientBase<PlanetariumClient.CBService.ICreateCBSys>, PlanetariumClient.CBService.ICreateCBSys {
        
        public CreateCBSysClient() {
        }
        
        public CreateCBSysClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CreateCBSysClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateCBSysClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CreateCBSysClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates Begin() {
            return base.Channel.Begin();
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> BeginAsync() {
            return base.Channel.BeginAsync();
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates Cancel() {
            return base.Channel.Cancel();
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> CancelAsync() {
            return base.Channel.CancelAsync();
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates Reset() {
            return base.Channel.Reset();
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> ResetAsync() {
            return base.Channel.ResetAsync();
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetCentralBody(PlanetariumClient.CBService.CBody CentralBody) {
            return base.Channel.SetCentralBody(CentralBody);
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetCentralBodyAsync(PlanetariumClient.CBService.CBody CentralBody) {
            return base.Channel.SetCentralBodyAsync(CentralBody);
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetSatellite(PlanetariumClient.CBService.CBody Satellite) {
            return base.Channel.SetSatellite(Satellite);
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetSatelliteAsync(PlanetariumClient.CBService.CBody Satellite) {
            return base.Channel.SetSatelliteAsync(Satellite);
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates SetLastSatelliteEnd(PlanetariumClient.CBService.CBody Satellite) {
            return base.Channel.SetLastSatelliteEnd(Satellite);
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysWorkFlowStates> SetLastSatelliteEndAsync(PlanetariumClient.CBService.CBody Satellite) {
            return base.Channel.SetLastSatelliteEndAsync(Satellite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PlanetariumClient.CBService.CreateCBSysResponse PlanetariumClient.CBService.ICreateCBSys.CreateCBSys(PlanetariumClient.CBService.CreateCBSysRequest request) {
            return base.Channel.CreateCBSys(request);
        }
        
        public PlanetariumClient.CBService.CreateCBSysWorkFlowStates CreateCBSys(out PlanetariumClient.CBService.CBSys NewCBSys) {
            PlanetariumClient.CBService.CreateCBSysRequest inValue = new PlanetariumClient.CBService.CreateCBSysRequest();
            PlanetariumClient.CBService.CreateCBSysResponse retVal = ((PlanetariumClient.CBService.ICreateCBSys)(this)).CreateCBSys(inValue);
            NewCBSys = retVal.NewCBSys;
            return retVal.CreateCBSysResult;
        }
        
        public System.Threading.Tasks.Task<PlanetariumClient.CBService.CreateCBSysResponse> CreateCBSysAsync(PlanetariumClient.CBService.CreateCBSysRequest request) {
            return base.Channel.CreateCBSysAsync(request);
        }
    }
}
